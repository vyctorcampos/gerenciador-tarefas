version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tarefa-postgres
    environment:
      POSTGRES_DB: quadro_tarefa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - tarefa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d quadro_tarefa"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tarefa-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quadro_tarefa?currentSchema=tarefa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: senha
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      JWT_SECRET: mt-secret-key-jwt-tarefa-2025
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tarefa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

 
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: livraria-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@livraria.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - livraria-network
    restart: unless-stopped
    profiles:
      - tools

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.front
    container_name: livraria-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - livraria-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  tarefa-network:
    driver: bridge