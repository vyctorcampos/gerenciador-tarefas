version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tarefas-postgres
    environment:
      POSTGRES_DB: quadro_tarefa
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/tarefa/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - tarefas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d quadro_tarefa"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend/tarefa
      dockerfile: Dockerfile
    container_name: tarefas-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quadro_tarefa?currentSchema=tarefa
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: senha
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      JWT_SECRET: mt-secret-key-jwt-tarefas-2025
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tarefas-network

  frontend:
    build:
      context: ./frontend/gerenciador-tarefas
      dockerfile: Dockerfile
    container_name: tarefas-frontend
    ports:
      - "3001:4200"
    depends_on:
      - backend
    networks:
      - tarefas-network
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend/gerenciador-tarefas:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
    driver: local

networks:
  tarefas-network:
    driver: bridge
